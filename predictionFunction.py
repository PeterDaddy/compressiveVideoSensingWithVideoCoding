import numpy as np  
def intraPrediction(averageFrame, intraPredictionBuffer, slidingWindowSize, i, j):
    # no prediction for the first block as always
    # allocate memeory for paramters below
    leftTop            = 0
    top                = np.zeros((slidingWindowSize*2, 1))
    left               = np.zeros((slidingWindowSize*2, 1))
    predictionTemplate = np.zeros((slidingWindowSize, slidingWindowSize))
    print(intraPredictionBuffer.size)
    if(i == 0 and j == 0):
        # this stage will immediatly return empty template
        return predictionTemplate
    else:
        if(((i-1) > 0) and (j-1)> 0):
            # obtain value from bottom right of intraPredictionBuffer
            leftTop = np.array(intraPredictionBuffer[(i-1):(i-1)+slidingWindowSize, (j-1):(j-1)+slidingWindowSize])
        else:
            leftTop = 0
        
    # if(((i-1) <= 0)):
    #     top = np.zeros((slidingWindowSize*2, 1))
    # elif(((i-1) > 0) and ((j+1) <= size(b,2))):
    #     top = [b{i-1,j}(c,1) ...
    #            b{i-1,j}(c,2) ...
    #            b{i-1,j}(c,3) ...
    #            b{i-1,j}(c,4) ...
    #            b{i-1,j+1}(c,1) ...
    #            b{i-1,j+1}(c,2) ...
    #            b{i-1,j+1}(c,3) ...
    #            b{i-1,j+1}(c,4)]
    # else
    #     top  = [b{i-1,j}(c,1) ...
    #                       b{i-1,j}(c,2) ...
    #                       b{i-1,j}(c,3) ...
    #                       b{i-1,j}(c,4) ...
    #                       0 ...
    #                       0 ...
    #                       0 ...
    #                       0];
    #             end
